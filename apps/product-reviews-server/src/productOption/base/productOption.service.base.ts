/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ProductOption as PrismaProductOption } from "@prisma/client";

export class ProductOptionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ProductOptionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.productOption.count(args);
  }

  async productOptions(
    args: Prisma.ProductOptionFindManyArgs
  ): Promise<PrismaProductOption[]> {
    return this.prisma.productOption.findMany(args);
  }
  async productOption(
    args: Prisma.ProductOptionFindUniqueArgs
  ): Promise<PrismaProductOption | null> {
    return this.prisma.productOption.findUnique(args);
  }
  async createProductOption(
    args: Prisma.ProductOptionCreateArgs
  ): Promise<PrismaProductOption> {
    return this.prisma.productOption.create(args);
  }
  async updateProductOption(
    args: Prisma.ProductOptionUpdateArgs
  ): Promise<PrismaProductOption> {
    return this.prisma.productOption.update(args);
  }
  async deleteProductOption(
    args: Prisma.ProductOptionDeleteArgs
  ): Promise<PrismaProductOption> {
    return this.prisma.productOption.delete(args);
  }
}
